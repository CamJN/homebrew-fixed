#!/usr/bin/env -P /usr/local/bin:/opt/homebrew/bin bash

outdated="$(brew outdated --json=v2)"
# shellcheck disable=SC2016
output='.[$type].[] | "\(.name)\t(\(.installed_versions | join(", "))) < \(.current_version)\(if .pinned then " [pinned at: " + .pinned_version + "]" else "" end):\($descriptions[.name])"'

function desc {
    local type="$1"
    local name="${2##*/}"
    echo "$2"
    if [ "$type" = "formulae" ]; then
        awk '$1 == "desc" {$1="";print $0}' "$(ls "${HOMEBREW_PREFIX}"/Cellar/${name}/*/.brew/${name}.rb | head -1)" | tr -d '"' | sed -e 's/^ /\t/'
    elif file="$(compgen -G "${HOMEBREW_PREFIX}/Caskroom/${name}/.metadata/*/*/Casks/${name}.json")"; then
        jq -r '.desc' "$file" | sed -e 's/^/\t/'
    else
        awk '$1 == "desc" {$1="";print $0}' "$(compgen -G "${HOMEBREW_PREFIX}/Caskroom/${name}/.metadata/*/*/Casks/${name}.rb")" | tr -d '"' | sed -e 's/^ /\t/'
    fi
}

function show_outdated {
    type="$1"
    if [ "$(jq -r ".$type | length" <<< "$outdated")" -gt 0 ]; then
        echo "Outdated $type:"
    else
        return 0
    fi
    #slow: descriptions=$(jq --arg type "$type" -r '.[$type].[].name' <<< "$outdated" | xargs brew desc "--${type}" | tr ':' '\n' | jq -n -R 'reduce inputs as $i ({}; . + { ($i): input })')
    descriptions=$(jq --arg type "$type" -r '.[$type].[].name' <<< "$outdated" | while read -r name; do desc "$type" "$name"; done | jq -n -R 'reduce inputs as $i ({}; . + { ($i): input })')

    jq --argjson descriptions "$descriptions" --arg type "$type" -r "$output" <<< "$outdated" | column -ts $'\t'
}

show_outdated formulae

show_outdated casks
